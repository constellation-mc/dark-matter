
name: build
on:
  push:
  workflow_dispatch:
    inputs:
      version_type:
        description: "The type of this version. e.g alpha"
        type: choice
        default: beta
        options:
          - release
          - beta
          - alpha
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[ci skip]')
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2.1.1
      - name: setup jdk 17
        uses: actions/setup-java@v4.1.0
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: run testmod
        uses: modmuss50/xvfb-action@v1
        with:
          run: ./gradlew runAutoTest --stacktrace --warning-mode=fail
      - name: build and publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build publish

      - name: get version #https://stackoverflow.com/questions/71089787/how-to-get-version-name-from-android-gradle-file-in-github-actions
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "VERSION_INFORMATION=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_ENV
          echo "VERSION_PLAIN=$(${{github.workspace}}/gradlew -q printVersion)" >> $GITHUB_ENV
      - name: publish release
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          version-type: ${{ inputs.version_type }}
          changelog: https://github.com/melontini/dark-matter/blob/${{ github.sha }}/CHANGELOG.md
          name: ${{ env.VERSION_INFORMATION }}
          version: ${{ env.VERSION_PLAIN }}

          game-versions: |
            1.20.1

          loaders: |
            fabric

          java: |
            17

          github-tag: ${{ env.VERSION_PLAIN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-commitish: ${{ github.sha }}
          github-prerelease: false

          modrinth-id: qcz8IJ9L
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: subset

          curseforge-id: 839908
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
